// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: facebook/matter.proto

package facebook

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Facebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Facebook) Reset() {
	*x = Facebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Facebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facebook) ProtoMessage() {}

func (x *Facebook) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facebook.ProtoReflect.Descriptor instead.
func (*Facebook) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{0}
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId   string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Created     int64  `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	AvatarUrl   string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	AccessToken string `protobuf:"bytes,6,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{1}
}

func (x *Page) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Page) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *Page) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Page) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Page) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Page) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type WebhookEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object string   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"` // instagram, page
	Entry  []*Entry `protobuf:"bytes,2,rep,name=entry,proto3" json:"entry,omitempty"`
}

func (x *WebhookEvent) Reset() {
	*x = WebhookEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookEvent) ProtoMessage() {}

func (x *WebhookEvent) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookEvent.ProtoReflect.Descriptor instead.
func (*WebhookEvent) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{2}
}

func (x *WebhookEvent) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *WebhookEvent) GetEntry() []*Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time      int64        `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Messaging []*Messaging `protobuf:"bytes,3,rep,name=messaging,proto3" json:"messaging,omitempty"`
	Changes   []*Change    `protobuf:"bytes,4,rep,name=changes,proto3" json:"changes,omitempty"`
	Standby   []*Messaging `protobuf:"bytes,5,rep,name=standby,proto3" json:"standby,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{3}
}

func (x *Entry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Entry) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Entry) GetMessaging() []*Messaging {
	if x != nil {
		return x.Messaging
	}
	return nil
}

func (x *Entry) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *Entry) GetStandby() []*Messaging {
	if x != nil {
		return x.Standby
	}
	return nil
}

type Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string       `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"` // feed, comments
	Value *ChangeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Change) Reset() {
	*x = Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{4}
}

func (x *Change) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Change) GetValue() *ChangeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type FbFrom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *FbFrom) Reset() {
	*x = FbFrom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FbFrom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FbFrom) ProtoMessage() {}

func (x *FbFrom) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FbFrom.ProtoReflect.Descriptor instead.
func (*FbFrom) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{5}
}

func (x *FbFrom) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FbFrom) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *FbFrom) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ChangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EditedTime       int64    `protobuf:"varint,3,opt,name=edited_time,json=editedTime,proto3" json:"edited_time,omitempty"`
	From             *FbFrom  `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	Post             *Post    `protobuf:"bytes,5,opt,name=post,proto3" json:"post,omitempty"`
	IsHidden         bool     `protobuf:"varint,6,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	Link             string   `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	Message          string   `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Photo            string   `protobuf:"bytes,9,opt,name=photo,proto3" json:"photo,omitempty"`
	Photos           []string `protobuf:"bytes,10,rep,name=photos,proto3" json:"photos,omitempty"`
	PostId           string   `protobuf:"bytes,11,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Story            string   `protobuf:"bytes,12,opt,name=story,proto3" json:"story,omitempty"`
	Title            string   `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	Video            string   `protobuf:"bytes,14,opt,name=video,proto3" json:"video,omitempty"`
	VideoFlagReason  string   `protobuf:"bytes,15,opt,name=video_flag_reason,json=videoFlagReason,proto3" json:"video_flag_reason,omitempty"`
	Action           string   `protobuf:"bytes,16,opt,name=action,proto3" json:"action,omitempty"`
	AlbumId          string   `protobuf:"bytes,17,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	CommentId        string   `protobuf:"bytes,18,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CreatedTime      int64    `protobuf:"varint,19,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	EventId          string   `protobuf:"bytes,20,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Item             string   `protobuf:"bytes,21,opt,name=item,proto3" json:"item,omitempty"`
	OpenGraphStoryId string   `protobuf:"bytes,22,opt,name=open_graph_story_id,json=openGraphStoryId,proto3" json:"open_graph_story_id,omitempty"`
	ParentId         string   `protobuf:"bytes,23,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	PhotoId          string   `protobuf:"bytes,24,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	ReactionType     string   `protobuf:"bytes,25,opt,name=reaction_type,json=reactionType,proto3" json:"reaction_type,omitempty"`
	Published        int32    `protobuf:"varint,26,opt,name=published,proto3" json:"published,omitempty"`
	RecipientId      string   `protobuf:"bytes,27,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	ShareId          string   `protobuf:"bytes,28,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`
	Verb             string   `protobuf:"bytes,29,opt,name=verb,proto3" json:"verb,omitempty"` // remove
	VideoId          string   `protobuf:"bytes,30,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Media            *IgMedia `protobuf:"bytes,31,opt,name=media,proto3" json:"media,omitempty"`
	Id               string   `protobuf:"bytes,32,opt,name=id,proto3" json:"id,omitempty"`
	Text             string   `protobuf:"bytes,33,opt,name=text,proto3" json:"text,omitempty"`
	MediaId          string   `protobuf:"bytes,34,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
}

func (x *ChangeValue) Reset() {
	*x = ChangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeValue) ProtoMessage() {}

func (x *ChangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeValue.ProtoReflect.Descriptor instead.
func (*ChangeValue) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeValue) GetEditedTime() int64 {
	if x != nil {
		return x.EditedTime
	}
	return 0
}

func (x *ChangeValue) GetFrom() *FbFrom {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChangeValue) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *ChangeValue) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *ChangeValue) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ChangeValue) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChangeValue) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *ChangeValue) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *ChangeValue) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *ChangeValue) GetStory() string {
	if x != nil {
		return x.Story
	}
	return ""
}

func (x *ChangeValue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChangeValue) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *ChangeValue) GetVideoFlagReason() string {
	if x != nil {
		return x.VideoFlagReason
	}
	return ""
}

func (x *ChangeValue) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ChangeValue) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *ChangeValue) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *ChangeValue) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *ChangeValue) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ChangeValue) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

func (x *ChangeValue) GetOpenGraphStoryId() string {
	if x != nil {
		return x.OpenGraphStoryId
	}
	return ""
}

func (x *ChangeValue) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ChangeValue) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *ChangeValue) GetReactionType() string {
	if x != nil {
		return x.ReactionType
	}
	return ""
}

func (x *ChangeValue) GetPublished() int32 {
	if x != nil {
		return x.Published
	}
	return 0
}

func (x *ChangeValue) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *ChangeValue) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *ChangeValue) GetVerb() string {
	if x != nil {
		return x.Verb
	}
	return ""
}

func (x *ChangeValue) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *ChangeValue) GetMedia() *IgMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ChangeValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeValue) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChangeValue) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type IgMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	MediaProductType string `protobuf:"bytes,1,opt,name=media_product_type,json=mediaProductType,proto3" json:"media_product_type,omitempty"`
}

func (x *IgMedia) Reset() {
	*x = IgMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgMedia) ProtoMessage() {}

func (x *IgMedia) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgMedia.ProtoReflect.Descriptor instead.
func (*IgMedia) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{7}
}

func (x *IgMedia) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IgMedia) GetMediaProductType() string {
	if x != nil {
		return x.MediaProductType
	}
	return ""
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusType      string `protobuf:"bytes,1,opt,name=status_type,json=statusType,proto3" json:"status_type,omitempty"`
	IsPublished     bool   `protobuf:"varint,2,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	UpdatedTime     string `protobuf:"bytes,3,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	PermalinkUrl    string `protobuf:"bytes,4,opt,name=permalink_url,json=permalinkUrl,proto3" json:"permalink_url,omitempty"`
	PromotionStatus string `protobuf:"bytes,5,opt,name=promotion_status,json=promotionStatus,proto3" json:"promotion_status,omitempty"`
	Id              string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{8}
}

func (x *Post) GetStatusType() string {
	if x != nil {
		return x.StatusType
	}
	return ""
}

func (x *Post) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *Post) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *Post) GetPermalinkUrl() string {
	if x != nil {
		return x.PermalinkUrl
	}
	return ""
}

func (x *Post) GetPromotionStatus() string {
	if x != nil {
		return x.PromotionStatus
	}
	return ""
}

func (x *Post) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Messaging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender       *Sender    `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient    *Recipient `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Timestamp    int64      `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message      *Message   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Delivery     *Delivery  `protobuf:"bytes,5,opt,name=delivery,proto3" json:"delivery,omitempty"`
	MessageType  string     `protobuf:"bytes,6,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	SenderAction string     `protobuf:"bytes,7,opt,name=sender_action,json=senderAction,proto3" json:"sender_action,omitempty"` // typing_on, typing_off, mark_seen
	Read         *Read      `protobuf:"bytes,8,opt,name=read,proto3" json:"read,omitempty"`
	Postback     *Postback  `protobuf:"bytes,9,opt,name=postback,proto3" json:"postback,omitempty"`
	Referral     *Referral  `protobuf:"bytes,10,opt,name=referral,proto3" json:"referral,omitempty"`
	Tag          string     `protobuf:"bytes,11,opt,name=tag,proto3" json:"tag,omitempty"` // HUMAN_AGENT
	Reaction     *Reaction  `protobuf:"bytes,12,opt,name=reaction,proto3" json:"reaction,omitempty"`
}

func (x *Messaging) Reset() {
	*x = Messaging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Messaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Messaging) ProtoMessage() {}

func (x *Messaging) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Messaging.ProtoReflect.Descriptor instead.
func (*Messaging) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{9}
}

func (x *Messaging) GetSender() *Sender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Messaging) GetRecipient() *Recipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Messaging) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Messaging) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Messaging) GetDelivery() *Delivery {
	if x != nil {
		return x.Delivery
	}
	return nil
}

func (x *Messaging) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *Messaging) GetSenderAction() string {
	if x != nil {
		return x.SenderAction
	}
	return ""
}

func (x *Messaging) GetRead() *Read {
	if x != nil {
		return x.Read
	}
	return nil
}

func (x *Messaging) GetPostback() *Postback {
	if x != nil {
		return x.Postback
	}
	return nil
}

func (x *Messaging) GetReferral() *Referral {
	if x != nil {
		return x.Referral
	}
	return nil
}

func (x *Messaging) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Messaging) GetReaction() *Reaction {
	if x != nil {
		return x.Reaction
	}
	return nil
}

type Postback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload  string    `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Referral *Referral `protobuf:"bytes,3,opt,name=referral,proto3" json:"referral,omitempty"`
	Title    string    `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Mid      string    `protobuf:"bytes,5,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *Postback) Reset() {
	*x = Postback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Postback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Postback) ProtoMessage() {}

func (x *Postback) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Postback.ProtoReflect.Descriptor instead.
func (*Postback) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{10}
}

func (x *Postback) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Postback) GetReferral() *Referral {
	if x != nil {
		return x.Referral
	}
	return nil
}

func (x *Postback) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Postback) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

type Referral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref            string          `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Source         string          `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"` // SHORTLINK, ADS
	Type           string          `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`     // OPEN_THREAD
	AdsContextData *AdsContextData `protobuf:"bytes,5,opt,name=ads_context_data,json=adsContextData,proto3" json:"ads_context_data,omitempty"`
	AdId           string          `protobuf:"bytes,6,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	RefererUri     string          `protobuf:"bytes,7,opt,name=referer_uri,json=refererUri,proto3" json:"referer_uri,omitempty"`
}

func (x *Referral) Reset() {
	*x = Referral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Referral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Referral) ProtoMessage() {}

func (x *Referral) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Referral.ProtoReflect.Descriptor instead.
func (*Referral) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{11}
}

func (x *Referral) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Referral) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Referral) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Referral) GetAdsContextData() *AdsContextData {
	if x != nil {
		return x.AdsContextData
	}
	return nil
}

func (x *Referral) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *Referral) GetRefererUri() string {
	if x != nil {
		return x.RefererUri
	}
	return ""
}

type AdsContextData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoUrl  string `protobuf:"bytes,1,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty"`
	PostId    string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AdTitle   string `protobuf:"bytes,3,opt,name=ad_title,json=adTitle,proto3" json:"ad_title,omitempty"`
	VideoUrl  string `protobuf:"bytes,4,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	ProductId string `protobuf:"bytes,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *AdsContextData) Reset() {
	*x = AdsContextData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdsContextData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdsContextData) ProtoMessage() {}

func (x *AdsContextData) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdsContextData.ProtoReflect.Descriptor instead.
func (*AdsContextData) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{12}
}

func (x *AdsContextData) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

func (x *AdsContextData) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *AdsContextData) GetAdTitle() string {
	if x != nil {
		return x.AdTitle
	}
	return ""
}

func (x *AdsContextData) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *AdsContextData) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type Reaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid      string `protobuf:"bytes,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Action   string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Reaction string `protobuf:"bytes,3,opt,name=reaction,proto3" json:"reaction,omitempty"`
	Emoji    string `protobuf:"bytes,4,opt,name=emoji,proto3" json:"emoji,omitempty"`
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{13}
}

func (x *Reaction) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *Reaction) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Reaction) GetReaction() string {
	if x != nil {
		return x.Reaction
	}
	return ""
}

func (x *Reaction) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type Read struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Watermark int64 `protobuf:"varint,1,opt,name=watermark,proto3" json:"watermark,omitempty"`
	Seq       int32 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *Read) Reset() {
	*x = Read{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Read) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Read) ProtoMessage() {}

func (x *Read) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Read.ProtoReflect.Descriptor instead.
func (*Read) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{14}
}

func (x *Read) GetWatermark() int64 {
	if x != nil {
		return x.Watermark
	}
	return 0
}

func (x *Read) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type Delivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mids      []string `protobuf:"bytes,1,rep,name=mids,proto3" json:"mids,omitempty"`
	Watermark int64    `protobuf:"varint,2,opt,name=watermark,proto3" json:"watermark,omitempty"`
	Seq       int32    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *Delivery) Reset() {
	*x = Delivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delivery) ProtoMessage() {}

func (x *Delivery) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delivery.ProtoReflect.Descriptor instead.
func (*Delivery) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{15}
}

func (x *Delivery) GetMids() []string {
	if x != nil {
		return x.Mids
	}
	return nil
}

func (x *Delivery) GetWatermark() int64 {
	if x != nil {
		return x.Watermark
	}
	return 0
}

func (x *Delivery) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type Sender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserRef string `protobuf:"bytes,2,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
}

func (x *Sender) Reset() {
	*x = Sender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sender) ProtoMessage() {}

func (x *Sender) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sender.ProtoReflect.Descriptor instead.
func (*Sender) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{16}
}

func (x *Sender) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sender) GetUserRef() string {
	if x != nil {
		return x.UserRef
	}
	return ""
}

// https://developers.facebook.com/docs/messenger-platform/discovery/private-replies
type Recipient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId    string `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CommentId string `protobuf:"bytes,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	UserRef   string `protobuf:"bytes,4,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
}

func (x *Recipient) Reset() {
	*x = Recipient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipient) ProtoMessage() {}

func (x *Recipient) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipient.ProtoReflect.Descriptor instead.
func (*Recipient) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{17}
}

func (x *Recipient) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Recipient) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *Recipient) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *Recipient) GetUserRef() string {
	if x != nil {
		return x.UserRef
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid          string        `protobuf:"bytes,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Text         string        `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Attachments  []*Attachment `protobuf:"bytes,4,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Read         *Read         `protobuf:"bytes,5,opt,name=read,proto3" json:"read,omitempty"`
	Attachment   *Attachment   `protobuf:"bytes,6,opt,name=attachment,proto3" json:"attachment,omitempty"`
	IsEcho       bool          `protobuf:"varint,7,opt,name=is_echo,json=isEcho,proto3" json:"is_echo,omitempty"`
	AppId        int64         `protobuf:"varint,8,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Metadata     string        `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	QuickReplies []*QuickReply `protobuf:"bytes,10,rep,name=quick_replies,json=quickReplies,proto3" json:"quick_replies,omitempty"`
	QuickReply   *QuickReply   `protobuf:"bytes,11,opt,name=quick_reply,json=quickReply,proto3" json:"quick_reply,omitempty"` // response from fb
	IsSupported  string        `protobuf:"bytes,12,opt,name=is_supported,json=isSupported,proto3" json:"is_supported,omitempty"`
	IsDeleted    bool          `protobuf:"varint,13,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	ReplyTo      *ReplyTo      `protobuf:"bytes,14,opt,name=reply_to,json=replyTo,proto3" json:"reply_to,omitempty"`
	Referral     *MessageRef   `protobuf:"bytes,15,opt,name=referral,proto3" json:"referral,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{18}
}

func (x *Message) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Message) GetRead() *Read {
	if x != nil {
		return x.Read
	}
	return nil
}

func (x *Message) GetAttachment() *Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

func (x *Message) GetIsEcho() bool {
	if x != nil {
		return x.IsEcho
	}
	return false
}

func (x *Message) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Message) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Message) GetQuickReplies() []*QuickReply {
	if x != nil {
		return x.QuickReplies
	}
	return nil
}

func (x *Message) GetQuickReply() *QuickReply {
	if x != nil {
		return x.QuickReply
	}
	return nil
}

func (x *Message) GetIsSupported() string {
	if x != nil {
		return x.IsSupported
	}
	return ""
}

func (x *Message) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Message) GetReplyTo() *ReplyTo {
	if x != nil {
		return x.ReplyTo
	}
	return nil
}

func (x *Message) GetReferral() *MessageRef {
	if x != nil {
		return x.Referral
	}
	return nil
}

type MessageRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *MessageRef) Reset() {
	*x = MessageRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRef) ProtoMessage() {}

func (x *MessageRef) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRef.ProtoReflect.Descriptor instead.
func (*MessageRef) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{19}
}

func (x *MessageRef) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RetailerId string `protobuf:"bytes,2,opt,name=retailer_id,json=retailerId,proto3" json:"retailer_id,omitempty"`
	ImageUrl   string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Subtitle   string `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{20}
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetRetailerId() string {
	if x != nil {
		return x.RetailerId
	}
	return ""
}

func (x *Product) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Product) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Product) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // template, fallback
	Payload *FbPayload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Title   string     `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	URL     string     `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{21}
}

func (x *Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Attachment) GetPayload() *FbPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Attachment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Attachment) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type FbPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url           string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	IsReuseable   bool              `protobuf:"varint,3,opt,name=is_reuseable,json=isReuseable,proto3" json:"is_reuseable,omitempty"`
	TemplateType  string            `protobuf:"bytes,4,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Sharable      bool              `protobuf:"varint,5,opt,name=sharable,proto3" json:"sharable,omitempty"`
	Elements      []*GenericElement `protobuf:"bytes,6,rep,name=elements,proto3" json:"elements,omitempty"`
	Text          string            `protobuf:"bytes,7,opt,name=text,proto3" json:"text,omitempty"` // for call btn
	Buttons       []*Button         `protobuf:"bytes,8,rep,name=buttons,proto3" json:"buttons,omitempty"`
	Address       *Address          `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	Summary       *Summary          `protobuf:"bytes,11,opt,name=summary,proto3" json:"summary,omitempty"`
	Adjustments   []*Adjustment     `protobuf:"bytes,12,rep,name=adjustments,proto3" json:"adjustments,omitempty"`
	RecipientName string            `protobuf:"bytes,13,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"`
	OrderNumber   string            `protobuf:"bytes,14,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	Currency      string            `protobuf:"bytes,15,opt,name=currency,proto3" json:"currency,omitempty"`
	PaymentMethod string            `protobuf:"bytes,16,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	OrderUrl      string            `protobuf:"bytes,17,opt,name=order_url,json=orderUrl,proto3" json:"order_url,omitempty"`
	Timestamp     string            `protobuf:"bytes,18,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Product       *Products         `protobuf:"bytes,19,opt,name=product,proto3" json:"product,omitempty"`
	Title         string            `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"` // string sticker_id = 21; must be int64
}

func (x *FbPayload) Reset() {
	*x = FbPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FbPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FbPayload) ProtoMessage() {}

func (x *FbPayload) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FbPayload.ProtoReflect.Descriptor instead.
func (*FbPayload) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{22}
}

func (x *FbPayload) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FbPayload) GetIsReuseable() bool {
	if x != nil {
		return x.IsReuseable
	}
	return false
}

func (x *FbPayload) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *FbPayload) GetSharable() bool {
	if x != nil {
		return x.Sharable
	}
	return false
}

func (x *FbPayload) GetElements() []*GenericElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *FbPayload) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FbPayload) GetButtons() []*Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *FbPayload) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *FbPayload) GetSummary() *Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *FbPayload) GetAdjustments() []*Adjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

func (x *FbPayload) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *FbPayload) GetOrderNumber() string {
	if x != nil {
		return x.OrderNumber
	}
	return ""
}

func (x *FbPayload) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FbPayload) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *FbPayload) GetOrderUrl() string {
	if x != nil {
		return x.OrderUrl
	}
	return ""
}

func (x *FbPayload) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *FbPayload) GetProduct() *Products {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *FbPayload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtotal     float32 `protobuf:"fixed32,1,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	ShippingCost float32 `protobuf:"fixed32,2,opt,name=shipping_cost,json=shippingCost,proto3" json:"shipping_cost,omitempty"`
	TotalTax     float32 `protobuf:"fixed32,3,opt,name=total_tax,json=totalTax,proto3" json:"total_tax,omitempty"`
	TotalCost    float32 `protobuf:"fixed32,4,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
}

func (x *Summary) Reset() {
	*x = Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summary) ProtoMessage() {}

func (x *Summary) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summary.ProtoReflect.Descriptor instead.
func (*Summary) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{23}
}

func (x *Summary) GetSubtotal() float32 {
	if x != nil {
		return x.Subtotal
	}
	return 0
}

func (x *Summary) GetShippingCost() float32 {
	if x != nil {
		return x.ShippingCost
	}
	return 0
}

func (x *Summary) GetTotalTax() float32 {
	if x != nil {
		return x.TotalTax
	}
	return 0
}

func (x *Summary) GetTotalCost() float32 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

type Adjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Adjustment) Reset() {
	*x = Adjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Adjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Adjustment) ProtoMessage() {}

func (x *Adjustment) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Adjustment.ProtoReflect.Descriptor instead.
func (*Adjustment) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{24}
}

func (x *Adjustment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Adjustment) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street_1   string `protobuf:"bytes,2,opt,name=street_1,json=street1,proto3" json:"street_1,omitempty"`
	Street_2   string `protobuf:"bytes,3,opt,name=street_2,json=street2,proto3" json:"street_2,omitempty"`
	City       string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode string `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	State      string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	Country    string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{25}
}

func (x *Address) GetStreet_1() string {
	if x != nil {
		return x.Street_1
	}
	return ""
}

func (x *Address) GetStreet_2() string {
	if x != nil {
		return x.Street_2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // web_url, postback
	Title               string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Payload             string `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Url                 string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	WebviewHeightRatio  string `protobuf:"bytes,6,opt,name=webview_height_ratio,json=webviewHeightRatio,proto3" json:"webview_height_ratio,omitempty"`   // <compact|tall|full>
	MessengerExtensions bool   `protobuf:"varint,7,opt,name=messenger_extensions,json=messengerExtensions,proto3" json:"messenger_extensions,omitempty"` // <true|false>
	FallbackUrl         string `protobuf:"bytes,8,opt,name=fallback_url,json=fallbackUrl,proto3" json:"fallback_url,omitempty"`                          //<URL_TO_FALLBACK_TO>"
	WebviewShareButton  string `protobuf:"bytes,9,opt,name=webview_share_button,json=webviewShareButton,proto3" json:"webview_share_button,omitempty"`
}

func (x *Button) Reset() {
	*x = Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Button) ProtoMessage() {}

func (x *Button) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Button.ProtoReflect.Descriptor instead.
func (*Button) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{26}
}

func (x *Button) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Button) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Button) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Button) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Button) GetWebviewHeightRatio() string {
	if x != nil {
		return x.WebviewHeightRatio
	}
	return ""
}

func (x *Button) GetMessengerExtensions() bool {
	if x != nil {
		return x.MessengerExtensions
	}
	return false
}

func (x *Button) GetFallbackUrl() string {
	if x != nil {
		return x.FallbackUrl
	}
	return ""
}

func (x *Button) GetWebviewShareButton() string {
	if x != nil {
		return x.WebviewShareButton
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{27}
}

func (x *Action) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Action) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GenericElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ItemUrl       string    `protobuf:"bytes,3,opt,name=item_url,json=itemUrl,proto3" json:"item_url,omitempty"`
	ImageUrl      string    `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Subtitle      string    `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	DefaultAction *Action   `protobuf:"bytes,6,opt,name=default_action,json=defaultAction,proto3" json:"default_action,omitempty"`
	Id            string    `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"` // fbproduct id
	Buttons       []*Button `protobuf:"bytes,8,rep,name=buttons,proto3" json:"buttons,omitempty"`
	Quantity      int64     `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Currency      string    `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	Price         float32   `protobuf:"fixed32,11,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *GenericElement) Reset() {
	*x = GenericElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericElement) ProtoMessage() {}

func (x *GenericElement) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericElement.ProtoReflect.Descriptor instead.
func (*GenericElement) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{28}
}

func (x *GenericElement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GenericElement) GetItemUrl() string {
	if x != nil {
		return x.ItemUrl
	}
	return ""
}

func (x *GenericElement) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GenericElement) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *GenericElement) GetDefaultAction() *Action {
	if x != nil {
		return x.DefaultAction
	}
	return nil
}

func (x *GenericElement) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GenericElement) GetButtons() []*Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *GenericElement) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GenericElement) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GenericElement) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Products struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elements []*Product `protobuf:"bytes,3,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *Products) Reset() {
	*x = Products{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Products) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Products) ProtoMessage() {}

func (x *Products) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Products.ProtoReflect.Descriptor instead.
func (*Products) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{29}
}

func (x *Products) GetElements() []*Product {
	if x != nil {
		return x.Elements
	}
	return nil
}

type QuickReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // text
	Title       string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Payload     string `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	ImageUrl    string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *QuickReply) Reset() {
	*x = QuickReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickReply) ProtoMessage() {}

func (x *QuickReply) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickReply.ProtoReflect.Descriptor instead.
func (*QuickReply) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{30}
}

func (x *QuickReply) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *QuickReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuickReply) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *QuickReply) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type ReplyTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   string      `protobuf:"bytes,4,opt,name=mid,proto3" json:"mid,omitempty"`
	Story *ReplyStory `protobuf:"bytes,5,opt,name=story,proto3" json:"story,omitempty"`
}

func (x *ReplyTo) Reset() {
	*x = ReplyTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTo) ProtoMessage() {}

func (x *ReplyTo) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTo.ProtoReflect.Descriptor instead.
func (*ReplyTo) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{31}
}

func (x *ReplyTo) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *ReplyTo) GetStory() *ReplyStory {
	if x != nil {
		return x.Story
	}
	return nil
}

type ReplyStory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Id  string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReplyStory) Reset() {
	*x = ReplyStory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_facebook_matter_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyStory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyStory) ProtoMessage() {}

func (x *ReplyStory) ProtoReflect() protoreflect.Message {
	mi := &file_facebook_matter_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyStory.ProtoReflect.Descriptor instead.
func (*ReplyStory) Descriptor() ([]byte, []int) {
	return file_facebook_matter_proto_rawDescGZIP(), []int{32}
}

func (x *ReplyStory) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ReplyStory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_facebook_matter_proto protoreflect.FileDescriptor

var file_facebook_matter_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x22, 0x0a, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0xa5, 0x01,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0xb9, 0x01, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79,
	0x22, 0x4b, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a,
	0x06, 0x46, 0x62, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x07, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x46, 0x62, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x22,
	0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x76, 0x65, 0x72, 0x62, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x65,
	0x72, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x49, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x07, 0x49, 0x67, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xcd,
	0x01, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x6e, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf1,
	0x03, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04,
	0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x2e, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x08,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x22, 0xc2, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x61,
	0x64, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x41, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0e, 0x61, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x72, 0x55, 0x72, 0x69, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x36, 0x0a,
	0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x4e, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x22, 0x6e, 0x0a, 0x09, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x22, 0xa1, 0x04, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x0b,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0d, 0x71, 0x75,
	0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x51, 0x75, 0x69,
	0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0c, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x0a, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12, 0x30, 0x0a, 0x08,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x22, 0x39,
	0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x12, 0x2b, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x77, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x46, 0x62, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x95,
	0x05, 0x0a, 0x09, 0x46, 0x62, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x75, 0x73, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x75, 0x73, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x07,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52,
	0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x22,
	0x38, 0x0a, 0x0a, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x31,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x98, 0x02, 0x0a, 0x06, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x31, 0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x65, 0x62,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x65, 0x62, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xbd, 0x02, 0x0a, 0x0e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x72, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x52, 0x07, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x0a, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x22, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x2e, 0x0a,
	0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x21, 0x5a,
	0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x62, 0x6e, 0x75,
	0x6d, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_facebook_matter_proto_rawDescOnce sync.Once
	file_facebook_matter_proto_rawDescData = file_facebook_matter_proto_rawDesc
)

func file_facebook_matter_proto_rawDescGZIP() []byte {
	file_facebook_matter_proto_rawDescOnce.Do(func() {
		file_facebook_matter_proto_rawDescData = protoimpl.X.CompressGZIP(file_facebook_matter_proto_rawDescData)
	})
	return file_facebook_matter_proto_rawDescData
}

var file_facebook_matter_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_facebook_matter_proto_goTypes = []interface{}{
	(*Facebook)(nil),       // 0: facebook.Facebook
	(*Page)(nil),           // 1: facebook.Page
	(*WebhookEvent)(nil),   // 2: facebook.WebhookEvent
	(*Entry)(nil),          // 3: facebook.Entry
	(*Change)(nil),         // 4: facebook.Change
	(*FbFrom)(nil),         // 5: facebook.FbFrom
	(*ChangeValue)(nil),    // 6: facebook.ChangeValue
	(*IgMedia)(nil),        // 7: facebook.IgMedia
	(*Post)(nil),           // 8: facebook.Post
	(*Messaging)(nil),      // 9: facebook.Messaging
	(*Postback)(nil),       // 10: facebook.Postback
	(*Referral)(nil),       // 11: facebook.Referral
	(*AdsContextData)(nil), // 12: facebook.AdsContextData
	(*Reaction)(nil),       // 13: facebook.Reaction
	(*Read)(nil),           // 14: facebook.Read
	(*Delivery)(nil),       // 15: facebook.Delivery
	(*Sender)(nil),         // 16: facebook.Sender
	(*Recipient)(nil),      // 17: facebook.Recipient
	(*Message)(nil),        // 18: facebook.Message
	(*MessageRef)(nil),     // 19: facebook.MessageRef
	(*Product)(nil),        // 20: facebook.Product
	(*Attachment)(nil),     // 21: facebook.Attachment
	(*FbPayload)(nil),      // 22: facebook.FbPayload
	(*Summary)(nil),        // 23: facebook.Summary
	(*Adjustment)(nil),     // 24: facebook.Adjustment
	(*Address)(nil),        // 25: facebook.Address
	(*Button)(nil),         // 26: facebook.Button
	(*Action)(nil),         // 27: facebook.Action
	(*GenericElement)(nil), // 28: facebook.GenericElement
	(*Products)(nil),       // 29: facebook.Products
	(*QuickReply)(nil),     // 30: facebook.QuickReply
	(*ReplyTo)(nil),        // 31: facebook.ReplyTo
	(*ReplyStory)(nil),     // 32: facebook.ReplyStory
}
var file_facebook_matter_proto_depIdxs = []int32{
	3,  // 0: facebook.WebhookEvent.entry:type_name -> facebook.Entry
	9,  // 1: facebook.Entry.messaging:type_name -> facebook.Messaging
	4,  // 2: facebook.Entry.changes:type_name -> facebook.Change
	9,  // 3: facebook.Entry.standby:type_name -> facebook.Messaging
	6,  // 4: facebook.Change.value:type_name -> facebook.ChangeValue
	5,  // 5: facebook.ChangeValue.from:type_name -> facebook.FbFrom
	8,  // 6: facebook.ChangeValue.post:type_name -> facebook.Post
	7,  // 7: facebook.ChangeValue.media:type_name -> facebook.IgMedia
	16, // 8: facebook.Messaging.sender:type_name -> facebook.Sender
	17, // 9: facebook.Messaging.recipient:type_name -> facebook.Recipient
	18, // 10: facebook.Messaging.message:type_name -> facebook.Message
	15, // 11: facebook.Messaging.delivery:type_name -> facebook.Delivery
	14, // 12: facebook.Messaging.read:type_name -> facebook.Read
	10, // 13: facebook.Messaging.postback:type_name -> facebook.Postback
	11, // 14: facebook.Messaging.referral:type_name -> facebook.Referral
	13, // 15: facebook.Messaging.reaction:type_name -> facebook.Reaction
	11, // 16: facebook.Postback.referral:type_name -> facebook.Referral
	12, // 17: facebook.Referral.ads_context_data:type_name -> facebook.AdsContextData
	21, // 18: facebook.Message.attachments:type_name -> facebook.Attachment
	14, // 19: facebook.Message.read:type_name -> facebook.Read
	21, // 20: facebook.Message.attachment:type_name -> facebook.Attachment
	30, // 21: facebook.Message.quick_replies:type_name -> facebook.QuickReply
	30, // 22: facebook.Message.quick_reply:type_name -> facebook.QuickReply
	31, // 23: facebook.Message.reply_to:type_name -> facebook.ReplyTo
	19, // 24: facebook.Message.referral:type_name -> facebook.MessageRef
	20, // 25: facebook.MessageRef.product:type_name -> facebook.Product
	22, // 26: facebook.Attachment.payload:type_name -> facebook.FbPayload
	28, // 27: facebook.FbPayload.elements:type_name -> facebook.GenericElement
	26, // 28: facebook.FbPayload.buttons:type_name -> facebook.Button
	25, // 29: facebook.FbPayload.address:type_name -> facebook.Address
	23, // 30: facebook.FbPayload.summary:type_name -> facebook.Summary
	24, // 31: facebook.FbPayload.adjustments:type_name -> facebook.Adjustment
	29, // 32: facebook.FbPayload.product:type_name -> facebook.Products
	27, // 33: facebook.GenericElement.default_action:type_name -> facebook.Action
	26, // 34: facebook.GenericElement.buttons:type_name -> facebook.Button
	20, // 35: facebook.Products.elements:type_name -> facebook.Product
	32, // 36: facebook.ReplyTo.story:type_name -> facebook.ReplyStory
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_facebook_matter_proto_init() }
func file_facebook_matter_proto_init() {
	if File_facebook_matter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_facebook_matter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Facebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FbFrom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Messaging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Postback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Referral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdsContextData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Read); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FbPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Adjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Products); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_facebook_matter_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyStory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_facebook_matter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_facebook_matter_proto_goTypes,
		DependencyIndexes: file_facebook_matter_proto_depIdxs,
		MessageInfos:      file_facebook_matter_proto_msgTypes,
	}.Build()
	File_facebook_matter_proto = out.File
	file_facebook_matter_proto_rawDesc = nil
	file_facebook_matter_proto_goTypes = nil
	file_facebook_matter_proto_depIdxs = nil
}
