syntax = "proto3";

option go_package = "github.com/mbnum/trade";

package trade;

message Msg {
    string text = 2;
}

message Nothing {
}

message Error {
    int32 class = 2;
    string stack = 3;
    string out = 5; // code, message
}

// time unit is ms
// setting/in/class/design, instance/out/object
// setting + change quest + current state = new state

message OrderItem {
    string order_id = 9;
    string product_id = 2; // sku
    string quantity = 3;
    int64 price = 6; // f(product, quantity)
    int64 compare_at_price = 8; // original price
    int64 discount = 7;
    string name = 4;
    string description = 5;
}

// TODO shipping address
message OrderShipping {
    string order_id = 2;
    string service_id = 3;
    int64 price = 4; // fee
    Address address = 5; // dst
}

// TODO billing address
message OrderBilling {
    string order_id = 2;
    string service_id = 4;
}

message Transaction {
    string account_id = 2;
    string id = 3;
    int64 amount = 4; // equal sum(payment.amount)
    string status = 5;
    int64 created = 6;
    Payment payment = 7;
    repeated Payment payments = 8;
}

message Transportation {
    string account_id = 2;
    string id = 3;
    int64 fee = 4;
    string status = 5;
}

// TODO coupon code is data
// promotion is condition
message Promotion {
}

// how to detect & fix error on whole e.g test on every dim
// if has error, reset amount to zero
// between order and transaction
message Payment {
    string transaction_id = 2;
    string order_id = 3;
    int64 amount = 4;
    int64 created = 5;
}

// TODO quantity like payment.amount
message Shipment {
    string transportation_id = 2;
    string order_id = 3;
    int64 fee = 4;
}

// customer, purchaser
message OrderBuyer {
    string account_member_id = 2;
    string email = 3;
    string phone = 4;
    string name = 5;
    AccountMember account_member = 6; // derived
}

message OrderSeller {
    string account_member_id = 2;
    string email = 3;
    string phone = 4;
    string name = 5;
    AccountMember account_member = 6; // derived
    int64 assigned = 7;
}

message OrderActionrun {
    int64 index = 3;
    string prev_action_id = 2;
    string action_id = 4;
    int64 created = 5;
    bytes state = 6;
    string note = 8;
    int64 scheduled = 12;
    string status = 9; // derived
}

// TODO changeable_expire
message Order {
    string account_id = 2;
    string id = 3;
    string alias = 4;

    int64 created = 8;
    string created_referral = 35;
    string created_by = 9;
    string created_in = 10;
    int64 updated = 11;
    string updated_by = 12;

    string pipeline_id = 27;
    string pipeline_hash = 36;
    string mode = 29; // debug, strategy
    int64 action_head = 31;
    OrderActionrun actionrun = 32; // level
    repeated OrderActionrun actionruns = 48; // derived

    OrderBuyer buyer = 22;
    OrderSeller seller = 23;
    repeated OrderSeller sellers = 33;

    CurrencyRate currency_rate = 19;

    OrderItem item = 14;
    repeated OrderItem items = 15;

    OrderBilling billing = 46;
    repeated OrderBilling billings = 47;

    OrderShipping shipping = 5; // like order-item
    repeated OrderShipping shippings = 43;

    Promotion promotion = 18;

    int64 subtotal = 20; // derived from item
    int64 total = 21; // derived from subtotal + shippingfee - promotion

    int64 issue_date = 62; // import case
    int64 dealed = 26;
    int64 due_date = 34;

    Shipment shipment = 44;
    repeated Shipment shipments = 45;

    Payment payment = 6;
    repeated Payment payments = 42;

    int64 paid = 24;
    int64 given = 25;

    string status = 13; // derived
    string shipment_status = 37; // derived
    string payment_status = 38; // derived

    string pos_id = 39;
}

message OrderMetric {
    string status = 3;
    string payment_status = 4;
    string shipment_status = 5;
    int64 order_count = 10;
}

message Orders {
    repeated Order orders = 4;
    string anchor = 5;
    int64 total = 6;

    repeated OrderMetric metrics = 7;
    int64 order_total_sum = 8;
}

// TODO payment, shipment status
// TODO pipeline, order-action-id
message OrdersRequest {
    string account_id = 2;

    string user_id = 3; // list order by user
    string status = 4; // list order by status

    int64 created_hour_from = 5;
    int64 created_hour_to = 6;
    int64 due_date_hour_from = 20;
    int64 due_date_hour_to = 21;

    bool include_deleted = 7;

    int32 limit = 8;
    string anchor = 9;
    int32 offset = 18;
    string dim = 17;
    string order_by = 19;

    repeated string ids = 10;
    repeated int64 modifieds = 11;
    string query = 12;
    bool is_draft = 13;
    repeated string seller_ids = 16; // agent ids
    repeated string statuses = 24;
    repeated string not_statuses = 25;
    string payment_status = 14;
    repeated string shipment_statuses = 26;
    repeated string not_shipment_statuses = 27;

    string assigned_seller_id = 32;
}

// e.g. call, contact, booking, feedback...
message OrderChangeRequest {
    Context ctx = 5;
    string account_id = 1;
    string pipeline_id = 2;
    string order_id = 3;
    string mode = 4;
    string type = 6;
    int64 created = 7;
    PhoneCall phone_call = 8;
    Mail mail = 9;
    Sms sms = 10;
    Lead lead = 11;
}

// TODO classify by email or phone number
// TODO use order
message Lead {
    string name = 1;
    string email = 2;
    string phone = 3;
    string product_id = 4;
}

message PhoneCall {
    string url = 2;
    string from = 3;
    string to = 4;
    int64 length = 5;
}

message Mail {
    string from = 2;
    string to = 3;
    string subject = 4;
    string content = 5;
}

message Sms {
    string from = 2;
    string to = 3;
    string content = 4;
}

message OrderChangeLog {
    string account_id = 2;
    string order_id = 3;
    string id = 4;
    int64 actionrun_index = 11;
    int64 begin_at = 9;
    int64 end_at = 10;
    string error = 5; // 400(invalid, require), 300, 500
    OrderChangeRequest in = 6;
    Order src = 7; // diff only
    Order dst = 8; // diff only
}

message CurrencyRate {
}

// TODO tax on product, shipment...
message Tax {
}

// scenario
message Pipeline {
    string account_id = 2;
    string id = 3;
    string name = 4;
    string avatar = 5;
    string state = 6;
    int64 created = 7;
    string created_by = 8;
    int64 updated = 9;
    string updated_by = 10;
    OrderAction action = 11; // root
    repeated OrderAction actions = 12;
    string action_hash = 13;
    PipelineCondition condition = 14;
}

message PipelineCondition {
    repeated string channel = 2;
}

message Pipelines {
	string account_id = 2;
	repeated Pipeline pipelines = 3;
	string anchor = 4;
	int64 total = 5;
}

// step, level e.g ship, pay
message OrderAction {
    string order_id = 3;
    string id = 4;
    repeated string nexts = 26;
    repeated OrderAction next_actions = 5; // derived
    OrderActionShip ship = 10;
    OrderActionPay pay = 11;
    OrderActionContact contact = 12;
    OrderActionBooking booking = 13;
    OrderActionCall call = 14;
    OrderActionEmail email = 15;
    OrderActionUpdateCustomer update_customer = 16;
    OrderActionAssign assign = 17;
    OrderActionCancel cancel = 18;
    OrderActionConfirm confirm = 19;
    OrderActionFeedback feedback = 20;
    OrderActionNote note = 21;
    OrderActionSms sms = 22;
    OrderActionCampaign campaign = 23;
    OrderActionConversation conversation = 24;
    OrderActionComment comment = 25;
}

message OrderActionShip {
}

message OrderActionPay {
}

// source
message OrderActionAffiliate {
}

// C3
message OrderActionContact {
}

// schedule for call, email
// TODO embed in other action
message OrderActionBooking {
}

// saler
message OrderActionAgency {
}

message OrderActionCall {
}

message OrderActionEmail {
}

message OrderActionUpdateCustomer {
}

message OrderActionCancel {
}

message OrderActionConfirm {
}

message OrderActionFeedback {
}

// or switch
message OrderActionAssign {
}

message OrderActionNote {
}

message OrderActionSms {
}

message OrderActionCampaign {
}

message OrderActionConversation {
}

message OrderActionComment {
}

message OrderActionCare {
}

// TODO product category

// good & service
// TODO pos
message Product {
    string account_id = 3;
    int64 quantity = 4;
    string id = 5;
    string name = 6;
    int64 price = 7;
    int64 compare_at_price = 8; // original price

    repeated Product other_variants = 68;

    string product_group_id = 69; // ring
    string left_product_id = 56; // only server
    string right_product_id = 57; // only server

    string url = 70; // (shared)

    string handle = 71; // (shared) iphone-6-plus-128G

    string description = 11; // (shared)

    repeated KV props = 14; // future replacement for props

    string mobile_url = 17; // (shared)

    // accessory.watch
    string category = 16; // (shared)

    string brand = 18; // (shared) brand name: apple, luis vuiton

    int64 created = 20;
    int64 updated = 21;
    string created_by = 22;
    string updated_by = 23;

    string image = 30;
    repeated string images = 31; // (shared)
    repeated string additional_images = 32; // (shared)

    repeated string videos = 33; // (shared)
    repeated string additional_videos = 34; // (shared)

    string note = 35; // (shared)

    // shipping
    bool requires_shipping = 36;

    int64 days_to_ship = 37;
    int64 dimension_width = 38;
    int64 dimension_height = 39;
    int64 dimension_length = 40;

    int64 weight = 41;
    string weight_unit = 42; // g, kg
    bool allow_preorder = 44;

    string condition = 47; // (shared) new, refurbished, used
    string visibility = 48; // (shared) published, staging, hidden, deleted

    string sku = 49;
    string barcode = 50;

    int64 stock = 60; //

    string source_id = 61;

    Tax tax = 64; // (shared)

    string currency = 65;

    int64 view_duration_sec = 67; // for event content_view only
}

message Products {
    repeated Product products = 2;
    string anchor = 3;
    int64 total = 4;
}

message ProductsRequest {
    string account_id = 2;
    string query = 3;
    int32 limit = 4; // 200
    string anchor = 5;
    int32 offset = 16;

    int64 price_gte = 6;
    int64 price_lte = 7;

    // [{key: 'colors', value:'red,blue', {key:'size', value:'xxl'}]
    // returns all variants which color is (red OR blue) AND size is xxl
    repeated KV props = 8;

    string availability = 9; // instock, out_of_stock
    string category = 10;

    string visibility = 11; // published or hidden
    repeated string ids = 12;
    repeated int64 last_modifieds = 14; // ms
    repeated string product_collection_ids = 15;

    bool include_deleted = 17;

    string sku = 18;
    string url = 19;
}

message KV {
    string key = 2;
    string value = 3;
    int64 key_int = 4;
    int64 value_int = 5;
}

message CourseVideo {
}

// TODO how, use for init app e.g custom menus

// TODO loyalty customer
// TODO referral
// service context
message Context {
    string id = 1; // uuid, phone number, email
    string id_mask = 2;
    string account_id = 3;

    // who
    Account account = 20; // personal
    AccountMember member = 24; // bob.dev.gg, user1.user.gg, phone.customer.gg

    // where
    WebBrowser web_browser = 40;

    // when
    repeated Reqrun reqruns = 60;
}

message Reqrun {
    string name = 1; // web-app, service
    int64 at = 2;
}

message Account {
    string id = 1;
    string email = 2;
    string encrypted_password = 3;
    string locale = 4;
}

message AccountMember {
    string account_id = 1;
    string id = 2;
    repeated AccountMember others = 68;
    string member_group_id = 69; // ring
    string left_member_id = 56; // only server
    string right_member_id = 57; // only server
    string name = 25;
    string email = 26;
    string phone = 27;
    Address address = 28;
    string avatar_url = 3;
    int64 birthday = 4;
    string gender = 5;
    string job = 6;
    string religion = 7;
    string national = 8;
}

message WebBrowser {
    string ip = 1;
    string user_agent = 2; // code
    string screen_resolution = 3;
    string timezone = 4;
    string language = 5;
    string type = 6;
    string platform = 7;
    string url = 8; // page url
    string referral_url = 9; // prev url
}

// TODO in-active
message UserEvent {
}

// in-passive
message UserChangeRequest {
}

// notification out-active, user is out-passive
message UserChangeLog {
}

message UserMetric {
}

message UserAction {
    string user_id = 2;
    string id = 3;
    UserActionEmail email = 4;
}

// e.g invoice, warn, reset password...
message UserActionEmail {
}

message Touchpoint {
}

message LandingPage {
}

message Notification {
}

message Website {
}

message Shop {
}

message Page {
}

// TODO page action
message PageActionPopup {
}

message Addresses {
	repeated Address addresses = 3;
}

// TODO other address
message Address {
    int32 po = 2; // 3, 2, 1 are province, district, ward
    string id = 3; // hn-bd-st-cva
    string province = 5;
    string name = 13; // required po
    string district = 6;
    string street = 7;
    string ward = 8;
    string spot = 10; // street number
    string instruction = 9;
    GHNAddress ghn = 11;
	Address ghtk = 12;
}

message GHNAddress {
	int64 ProvinceID = 2;
	string ProvinceName = 3;
	int64 DistrictID = 4;
	string DistrictName = 5;
	int64 Code = 6;
	string WardName = 7;
	string WardCode = 8;
}

message IPAddress {
}

message Credit {
}

message BusinessHour {
}

// e.g. sass subscription
message Service {
}

message Campaign {
}

message Key {
    string account_id = 2;
    string id = 3;
    string order_id = 4;
    string product_id = 5;
    string user_id = 6;
}

message Webhook {
}

message IntegratedShipping {
    string account_id = 2;

    string id = 18;
    string codename = 3; // ghtk, ghn
    string shop_id = 4;

    string name = 5;
    string phone = 6;
    string email = 7;
    string password = 8;
    string api_token = 9;

    string access_token = 10;
    string refresh_token = 11;

    int64 first_integrated = 13;
    int64 integrated = 14;
    string integrated_by = 17;

    int64 last_used = 12;
    int64 first_error = 15;
    string connect_status = 16; // connected || disconnected
    string otp = 22;
    Address address = 21;
}

message ProductFeed {
    string account_id = 2;
    string id = 3;
}

message ProductCollection {
    string account_id = 2;
    string id = 3;
}

message Bill {
    string account_id = 2;
    string id = 3;
    string order_id = 4;

    string created_by = 6;
    int64 created = 7;

    string method = 8; // manually

    int64 amount = 12;

    string description = 21;

    string picture_url = 22;
}

message OrderComment {
    string account_id = 2;
    string order_id = 3;
    string id = 4;
}

message ShopeeShop {
    string account_id = 2;
    string id = 3;
}

message ListRequest {
    string anchor = 2;
    int32 limit = 3;
}
