// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: shopify/matter.proto

package shopify

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Shopify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Shopify) Reset() {
	*x = Shopify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shopify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shopify) ProtoMessage() {}

func (x *Shopify) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shopify.ProtoReflect.Descriptor instead.
func (*Shopify) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{0}
}

// TODO https://shopify.dev/docs/api/admin-rest/2023-04/resources/order
type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{1}
}

// https://shopify.dev/docs/api/admin-rest/2023-01/resources/webhook#event-topics
type OrderCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AdminGraphqlApiId string `protobuf:"bytes,3,opt,name=admin_graphql_api_id,json=adminGraphqlApiId,proto3" json:"admin_graphql_api_id,omitempty"`
	// "app_id": null,
	// "browser_ip": null,
	// "buyer_accepts_marketing": true,
	CancelReason string `protobuf:"bytes,7,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	CancelledAt  string `protobuf:"bytes,8,opt,name=cancelled_at,json=cancelledAt,proto3" json:"cancelled_at,omitempty"`
	CartToken    string `protobuf:"bytes,9,opt,name=cart_token,json=cartToken,proto3" json:"cart_token,omitempty"`
	// "checkout_id": null,
	// "checkout_token": null,
	ClosedAt                 string    `protobuf:"bytes,12,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	Confirmed                bool      `protobuf:"varint,13,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	ContactEmail             string    `protobuf:"bytes,14,opt,name=contact_email,json=contactEmail,proto3" json:"contact_email,omitempty"`
	CreatedAt                string    `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Currency                 string    `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	CurrentSubtotalPrice     string    `protobuf:"bytes,17,opt,name=current_subtotal_price,json=currentSubtotalPrice,proto3" json:"current_subtotal_price,omitempty"`
	CurrentSubtotalPriceSet  *TotalSet `protobuf:"bytes,18,opt,name=current_subtotal_price_set,json=currentSubtotalPriceSet,proto3" json:"current_subtotal_price_set,omitempty"`
	CurrentTotalDiscounts    string    `protobuf:"bytes,19,opt,name=current_total_discounts,json=currentTotalDiscounts,proto3" json:"current_total_discounts,omitempty"`
	CurrentTotalDiscountsSet *TotalSet `protobuf:"bytes,20,opt,name=current_total_discounts_set,json=currentTotalDiscountsSet,proto3" json:"current_total_discounts_set,omitempty"`
	// "current_total_duties_set": null,
	CurrentTotalPrice    string    `protobuf:"bytes,22,opt,name=current_total_price,json=currentTotalPrice,proto3" json:"current_total_price,omitempty"`
	CurrentTotalPriceSet *TotalSet `protobuf:"bytes,23,opt,name=current_total_price_set,json=currentTotalPriceSet,proto3" json:"current_total_price_set,omitempty"`
	CurrentTotalTax      string    `protobuf:"bytes,24,opt,name=current_total_tax,json=currentTotalTax,proto3" json:"current_total_tax,omitempty"`
	CurrentTotalTaxSet   *TotalSet `protobuf:"bytes,25,opt,name=current_total_tax_set,json=currentTotalTaxSet,proto3" json:"current_total_tax_set,omitempty"`
	CustomerLocale       string    `protobuf:"bytes,26,opt,name=customer_locale,json=customerLocale,proto3" json:"customer_locale,omitempty"`
	// "device_id": null,
	// "discount_codes": [],
	Email             string `protobuf:"bytes,29,opt,name=email,proto3" json:"email,omitempty"`
	EstimatedTaxes    bool   `protobuf:"varint,30,opt,name=estimated_taxes,json=estimatedTaxes,proto3" json:"estimated_taxes,omitempty"`
	FinancialStatus   string `protobuf:"bytes,31,opt,name=financial_status,json=financialStatus,proto3" json:"financial_status,omitempty"`
	FulfillmentStatus string `protobuf:"bytes,32,opt,name=fulfillment_status,json=fulfillmentStatus,proto3" json:"fulfillment_status,omitempty"`
	// "gateway": null,
	LandingSite    string `protobuf:"bytes,33,opt,name=landing_site,json=landingSite,proto3" json:"landing_site,omitempty"`
	LandingSiteRef string `protobuf:"bytes,34,opt,name=landing_site_ref,json=landingSiteRef,proto3" json:"landing_site_ref,omitempty"`
	// "location_id": null,
	// "merchant_of_record_app_id": null,
	Name string `protobuf:"bytes,37,opt,name=name,proto3" json:"name,omitempty"`
	Note string `protobuf:"bytes,38,opt,name=note,proto3" json:"note,omitempty"`
	// "note_attributes": [],
	Number                 int64     `protobuf:"varint,40,opt,name=number,proto3" json:"number,omitempty"`
	OrderNumber            int64     `protobuf:"varint,41,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	OrderStatusUrl         string    `protobuf:"bytes,42,opt,name=order_status_url,json=orderStatusUrl,proto3" json:"order_status_url,omitempty"`
	OriginalTotalDutiesSet *TotalSet `protobuf:"bytes,43,opt,name=original_total_duties_set,json=originalTotalDutiesSet,proto3" json:"original_total_duties_set,omitempty"`
	PaymentGatewayNames    []string  `protobuf:"bytes,44,rep,name=payment_gateway_names,json=paymentGatewayNames,proto3" json:"payment_gateway_names,omitempty"`
	Phone                  string    `protobuf:"bytes,45,opt,name=phone,proto3" json:"phone,omitempty"`
	PresentmentCurrency    string    `protobuf:"bytes,46,opt,name=presentment_currency,json=presentmentCurrency,proto3" json:"presentment_currency,omitempty"`
	ProcessedAt            string    `protobuf:"bytes,47,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	ProcessingMethod       string    `protobuf:"bytes,48,opt,name=processing_method,json=processingMethod,proto3" json:"processing_method,omitempty"`
	Reference              string    `protobuf:"bytes,49,opt,name=reference,proto3" json:"reference,omitempty"`
	ReferringSite          string    `protobuf:"bytes,50,opt,name=referring_site,json=referringSite,proto3" json:"referring_site,omitempty"`
	// "source_identifier": null,
	SourceName       string    `protobuf:"bytes,52,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	SourceUrl        string    `protobuf:"bytes,53,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	SubtotalPrice    string    `protobuf:"bytes,54,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price,omitempty"`
	SubtotalPriceSet *TotalSet `protobuf:"bytes,55,opt,name=subtotal_price_set,json=subtotalPriceSet,proto3" json:"subtotal_price_set,omitempty"`
	Tags             string    `protobuf:"bytes,56,opt,name=tags,proto3" json:"tags,omitempty"`
	// "tax_lines": [],
	TaxesIncluded          bool      `protobuf:"varint,58,opt,name=taxes_included,json=taxesIncluded,proto3" json:"taxes_included,omitempty"`
	Test                   bool      `protobuf:"varint,59,opt,name=test,proto3" json:"test,omitempty"`
	Token                  string    `protobuf:"bytes,60,opt,name=token,proto3" json:"token,omitempty"`
	TotalDiscounts         string    `protobuf:"bytes,61,opt,name=total_discounts,json=totalDiscounts,proto3" json:"total_discounts,omitempty"`
	TotalDiscountsSet      *TotalSet `protobuf:"bytes,62,opt,name=total_discounts_set,json=totalDiscountsSet,proto3" json:"total_discounts_set,omitempty"`
	TotalLineItemsPrice    string    `protobuf:"bytes,63,opt,name=total_line_items_price,json=totalLineItemsPrice,proto3" json:"total_line_items_price,omitempty"`
	TotalLineItemsPriceSet *TotalSet `protobuf:"bytes,64,opt,name=total_line_items_price_set,json=totalLineItemsPriceSet,proto3" json:"total_line_items_price_set,omitempty"`
	TotalOutstanding       string    `protobuf:"bytes,65,opt,name=total_outstanding,json=totalOutstanding,proto3" json:"total_outstanding,omitempty"`
	TotalPrice             string    `protobuf:"bytes,66,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	TotalPriceSet          *TotalSet `protobuf:"bytes,67,opt,name=total_price_set,json=totalPriceSet,proto3" json:"total_price_set,omitempty"`
	TotalShippingPriceSet  *TotalSet `protobuf:"bytes,68,opt,name=total_shipping_price_set,json=totalShippingPriceSet,proto3" json:"total_shipping_price_set,omitempty"`
	TotalTax               string    `protobuf:"bytes,69,opt,name=total_tax,json=totalTax,proto3" json:"total_tax,omitempty"`
	TotalTaxSet            *TotalSet `protobuf:"bytes,70,opt,name=total_tax_set,json=totalTaxSet,proto3" json:"total_tax_set,omitempty"`
	TotalTipReceived       string    `protobuf:"bytes,71,opt,name=total_tip_received,json=totalTipReceived,proto3" json:"total_tip_received,omitempty"`
	// "total_weight": 0,
	UpdatedAt string `protobuf:"bytes,73,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// "user_id": null,
	BillingAddress *CustomerAddress `protobuf:"bytes,74,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	Customer       *Customer        `protobuf:"bytes,75,opt,name=customer,proto3" json:"customer,omitempty"`
	// "discount_applications": [],
	// "fulfillments": [],
	LineItems []*LineItem `protobuf:"bytes,78,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
	// "payment_terms": null,
	// "refunds": [],
	ShippingAddress *CustomerAddress `protobuf:"bytes,81,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	ShippingLines   []*ShippingLine  `protobuf:"bytes,82,rep,name=shipping_lines,json=shippingLines,proto3" json:"shipping_lines,omitempty"`
}

func (x *OrderCreate) Reset() {
	*x = OrderCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreate) ProtoMessage() {}

func (x *OrderCreate) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreate.ProtoReflect.Descriptor instead.
func (*OrderCreate) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{2}
}

func (x *OrderCreate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderCreate) GetAdminGraphqlApiId() string {
	if x != nil {
		return x.AdminGraphqlApiId
	}
	return ""
}

func (x *OrderCreate) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

func (x *OrderCreate) GetCancelledAt() string {
	if x != nil {
		return x.CancelledAt
	}
	return ""
}

func (x *OrderCreate) GetCartToken() string {
	if x != nil {
		return x.CartToken
	}
	return ""
}

func (x *OrderCreate) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

func (x *OrderCreate) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *OrderCreate) GetContactEmail() string {
	if x != nil {
		return x.ContactEmail
	}
	return ""
}

func (x *OrderCreate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderCreate) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderCreate) GetCurrentSubtotalPrice() string {
	if x != nil {
		return x.CurrentSubtotalPrice
	}
	return ""
}

func (x *OrderCreate) GetCurrentSubtotalPriceSet() *TotalSet {
	if x != nil {
		return x.CurrentSubtotalPriceSet
	}
	return nil
}

func (x *OrderCreate) GetCurrentTotalDiscounts() string {
	if x != nil {
		return x.CurrentTotalDiscounts
	}
	return ""
}

func (x *OrderCreate) GetCurrentTotalDiscountsSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalDiscountsSet
	}
	return nil
}

func (x *OrderCreate) GetCurrentTotalPrice() string {
	if x != nil {
		return x.CurrentTotalPrice
	}
	return ""
}

func (x *OrderCreate) GetCurrentTotalPriceSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalPriceSet
	}
	return nil
}

func (x *OrderCreate) GetCurrentTotalTax() string {
	if x != nil {
		return x.CurrentTotalTax
	}
	return ""
}

func (x *OrderCreate) GetCurrentTotalTaxSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalTaxSet
	}
	return nil
}

func (x *OrderCreate) GetCustomerLocale() string {
	if x != nil {
		return x.CustomerLocale
	}
	return ""
}

func (x *OrderCreate) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OrderCreate) GetEstimatedTaxes() bool {
	if x != nil {
		return x.EstimatedTaxes
	}
	return false
}

func (x *OrderCreate) GetFinancialStatus() string {
	if x != nil {
		return x.FinancialStatus
	}
	return ""
}

func (x *OrderCreate) GetFulfillmentStatus() string {
	if x != nil {
		return x.FulfillmentStatus
	}
	return ""
}

func (x *OrderCreate) GetLandingSite() string {
	if x != nil {
		return x.LandingSite
	}
	return ""
}

func (x *OrderCreate) GetLandingSiteRef() string {
	if x != nil {
		return x.LandingSiteRef
	}
	return ""
}

func (x *OrderCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderCreate) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *OrderCreate) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *OrderCreate) GetOrderNumber() int64 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

func (x *OrderCreate) GetOrderStatusUrl() string {
	if x != nil {
		return x.OrderStatusUrl
	}
	return ""
}

func (x *OrderCreate) GetOriginalTotalDutiesSet() *TotalSet {
	if x != nil {
		return x.OriginalTotalDutiesSet
	}
	return nil
}

func (x *OrderCreate) GetPaymentGatewayNames() []string {
	if x != nil {
		return x.PaymentGatewayNames
	}
	return nil
}

func (x *OrderCreate) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *OrderCreate) GetPresentmentCurrency() string {
	if x != nil {
		return x.PresentmentCurrency
	}
	return ""
}

func (x *OrderCreate) GetProcessedAt() string {
	if x != nil {
		return x.ProcessedAt
	}
	return ""
}

func (x *OrderCreate) GetProcessingMethod() string {
	if x != nil {
		return x.ProcessingMethod
	}
	return ""
}

func (x *OrderCreate) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *OrderCreate) GetReferringSite() string {
	if x != nil {
		return x.ReferringSite
	}
	return ""
}

func (x *OrderCreate) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *OrderCreate) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *OrderCreate) GetSubtotalPrice() string {
	if x != nil {
		return x.SubtotalPrice
	}
	return ""
}

func (x *OrderCreate) GetSubtotalPriceSet() *TotalSet {
	if x != nil {
		return x.SubtotalPriceSet
	}
	return nil
}

func (x *OrderCreate) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *OrderCreate) GetTaxesIncluded() bool {
	if x != nil {
		return x.TaxesIncluded
	}
	return false
}

func (x *OrderCreate) GetTest() bool {
	if x != nil {
		return x.Test
	}
	return false
}

func (x *OrderCreate) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *OrderCreate) GetTotalDiscounts() string {
	if x != nil {
		return x.TotalDiscounts
	}
	return ""
}

func (x *OrderCreate) GetTotalDiscountsSet() *TotalSet {
	if x != nil {
		return x.TotalDiscountsSet
	}
	return nil
}

func (x *OrderCreate) GetTotalLineItemsPrice() string {
	if x != nil {
		return x.TotalLineItemsPrice
	}
	return ""
}

func (x *OrderCreate) GetTotalLineItemsPriceSet() *TotalSet {
	if x != nil {
		return x.TotalLineItemsPriceSet
	}
	return nil
}

func (x *OrderCreate) GetTotalOutstanding() string {
	if x != nil {
		return x.TotalOutstanding
	}
	return ""
}

func (x *OrderCreate) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

func (x *OrderCreate) GetTotalPriceSet() *TotalSet {
	if x != nil {
		return x.TotalPriceSet
	}
	return nil
}

func (x *OrderCreate) GetTotalShippingPriceSet() *TotalSet {
	if x != nil {
		return x.TotalShippingPriceSet
	}
	return nil
}

func (x *OrderCreate) GetTotalTax() string {
	if x != nil {
		return x.TotalTax
	}
	return ""
}

func (x *OrderCreate) GetTotalTaxSet() *TotalSet {
	if x != nil {
		return x.TotalTaxSet
	}
	return nil
}

func (x *OrderCreate) GetTotalTipReceived() string {
	if x != nil {
		return x.TotalTipReceived
	}
	return ""
}

func (x *OrderCreate) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *OrderCreate) GetBillingAddress() *CustomerAddress {
	if x != nil {
		return x.BillingAddress
	}
	return nil
}

func (x *OrderCreate) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *OrderCreate) GetLineItems() []*LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

func (x *OrderCreate) GetShippingAddress() *CustomerAddress {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

func (x *OrderCreate) GetShippingLines() []*ShippingLine {
	if x != nil {
		return x.ShippingLines
	}
	return nil
}

type Url struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderStatusUrl string `protobuf:"bytes,2,opt,name=order_status_url,json=orderStatusUrl,proto3" json:"order_status_url,omitempty"`
}

func (x *Url) Reset() {
	*x = Url{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{3}
}

func (x *Url) GetOrderStatusUrl() string {
	if x != nil {
		return x.OrderStatusUrl
	}
	return ""
}

type PaymentTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentTerms) Reset() {
	*x = PaymentTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTerms) ProtoMessage() {}

func (x *PaymentTerms) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTerms.ProtoReflect.Descriptor instead.
func (*PaymentTerms) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{4}
}

type TaxLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaxLine) Reset() {
	*x = TaxLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxLine) ProtoMessage() {}

func (x *TaxLine) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxLine.ProtoReflect.Descriptor instead.
func (*TaxLine) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{5}
}

type ShippingLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// "carrier_identifier": null,
	// "code": null,
	// "delivery_category": null,
	DiscountedPrice    string    `protobuf:"bytes,6,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	DiscountedPriceSet *TotalSet `protobuf:"bytes,7,opt,name=discounted_price_set,json=discountedPriceSet,proto3" json:"discounted_price_set,omitempty"`
	Phone              string    `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	Price              string    `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`
	PriceSet           *TotalSet `protobuf:"bytes,10,opt,name=price_set,json=priceSet,proto3" json:"price_set,omitempty"`
	// "requested_fulfillment_service_id": null,
	Source string `protobuf:"bytes,12,opt,name=source,proto3" json:"source,omitempty"`
	Title  string `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ShippingLine) Reset() {
	*x = ShippingLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShippingLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingLine) ProtoMessage() {}

func (x *ShippingLine) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingLine.ProtoReflect.Descriptor instead.
func (*ShippingLine) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{6}
}

func (x *ShippingLine) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShippingLine) GetDiscountedPrice() string {
	if x != nil {
		return x.DiscountedPrice
	}
	return ""
}

func (x *ShippingLine) GetDiscountedPriceSet() *TotalSet {
	if x != nil {
		return x.DiscountedPriceSet
	}
	return nil
}

func (x *ShippingLine) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ShippingLine) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ShippingLine) GetPriceSet() *TotalSet {
	if x != nil {
		return x.PriceSet
	}
	return nil
}

func (x *ShippingLine) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ShippingLine) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Refund) Reset() {
	*x = Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{7}
}

type PaymentTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentTerm) Reset() {
	*x = PaymentTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentTerm) ProtoMessage() {}

func (x *PaymentTerm) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentTerm.ProtoReflect.Descriptor instead.
func (*PaymentTerm) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{8}
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{9}
}

func (x *Attribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Fulfillment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Fulfillment) Reset() {
	*x = Fulfillment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fulfillment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fulfillment) ProtoMessage() {}

func (x *Fulfillment) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fulfillment.ProtoReflect.Descriptor instead.
func (*Fulfillment) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{10}
}

type EmailMarketingConsent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *EmailMarketingConsent) Reset() {
	*x = EmailMarketingConsent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailMarketingConsent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailMarketingConsent) ProtoMessage() {}

func (x *EmailMarketingConsent) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailMarketingConsent.ProtoReflect.Descriptor instead.
func (*EmailMarketingConsent) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{11}
}

func (x *EmailMarketingConsent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Email             string           `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	AcceptsMarketing  bool             `protobuf:"varint,4,opt,name=accepts_marketing,json=acceptsMarketing,proto3" json:"accepts_marketing,omitempty"`
	CreatedAt         string           `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string           `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FirstName         string           `protobuf:"bytes,7,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string           `protobuf:"bytes,8,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	State             string           `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	Note              string           `protobuf:"bytes,10,opt,name=note,proto3" json:"note,omitempty"`
	VerifiedEmail     bool             `protobuf:"varint,11,opt,name=verified_email,json=verifiedEmail,proto3" json:"verified_email,omitempty"`
	DefaultAddress    *CustomerAddress `protobuf:"bytes,12,opt,name=default_address,json=defaultAddress,proto3" json:"default_address,omitempty"`
	AdminGraphqlApiId string           `protobuf:"bytes,13,opt,name=admin_graphql_api_id,json=adminGraphqlApiId,proto3" json:"admin_graphql_api_id,omitempty"`
	Currency          string           `protobuf:"bytes,14,opt,name=currency,proto3" json:"currency,omitempty"`
	Phone             string           `protobuf:"bytes,15,opt,name=phone,proto3" json:"phone,omitempty"`
	// "multipass_identifier": null,
	// "tax_exempt": false,
	EmailMarketingConsent *EmailMarketingConsent `protobuf:"bytes,18,opt,name=email_marketing_consent,json=emailMarketingConsent,proto3" json:"email_marketing_consent,omitempty"`
	// "sms_marketing_consent": null,
	Tags string `protobuf:"bytes,20,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{12}
}

func (x *Customer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Customer) GetAcceptsMarketing() bool {
	if x != nil {
		return x.AcceptsMarketing
	}
	return false
}

func (x *Customer) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Customer) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Customer) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Customer) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Customer) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Customer) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Customer) GetVerifiedEmail() bool {
	if x != nil {
		return x.VerifiedEmail
	}
	return false
}

func (x *Customer) GetDefaultAddress() *CustomerAddress {
	if x != nil {
		return x.DefaultAddress
	}
	return nil
}

func (x *Customer) GetAdminGraphqlApiId() string {
	if x != nil {
		return x.AdminGraphqlApiId
	}
	return ""
}

func (x *Customer) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Customer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Customer) GetEmailMarketingConsent() *EmailMarketingConsent {
	if x != nil {
		return x.EmailMarketingConsent
	}
	return nil
}

func (x *Customer) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type DiscountApplications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscountApplications) Reset() {
	*x = DiscountApplications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountApplications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountApplications) ProtoMessage() {}

func (x *DiscountApplications) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountApplications.ProtoReflect.Descriptor instead.
func (*DiscountApplications) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{13}
}

type DiscountCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscountCode) Reset() {
	*x = DiscountCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountCode) ProtoMessage() {}

func (x *DiscountCode) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountCode.ProtoReflect.Descriptor instead.
func (*DiscountCode) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{14}
}

type CurrentTotalSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTotalDiscountsSet *TotalSet `protobuf:"bytes,2,opt,name=current_total_discounts_set,json=currentTotalDiscountsSet,proto3" json:"current_total_discounts_set,omitempty"`
	CurrentTotalDutiesSet    *TotalSet `protobuf:"bytes,3,opt,name=current_total_duties_set,json=currentTotalDutiesSet,proto3" json:"current_total_duties_set,omitempty"`
	CurrentTotalPriceSet     *TotalSet `protobuf:"bytes,4,opt,name=current_total_price_set,json=currentTotalPriceSet,proto3" json:"current_total_price_set,omitempty"`
	CurrentSubtotalPriceSet  *TotalSet `protobuf:"bytes,5,opt,name=current_subtotal_price_set,json=currentSubtotalPriceSet,proto3" json:"current_subtotal_price_set,omitempty"`
	CurrentTotalTaxSet       *TotalSet `protobuf:"bytes,6,opt,name=current_total_tax_set,json=currentTotalTaxSet,proto3" json:"current_total_tax_set,omitempty"`
	OriginalTotalDutiesSet   *TotalSet `protobuf:"bytes,7,opt,name=original_total_duties_set,json=originalTotalDutiesSet,proto3" json:"original_total_duties_set,omitempty"`
}

func (x *CurrentTotalSet) Reset() {
	*x = CurrentTotalSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentTotalSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTotalSet) ProtoMessage() {}

func (x *CurrentTotalSet) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTotalSet.ProtoReflect.Descriptor instead.
func (*CurrentTotalSet) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{15}
}

func (x *CurrentTotalSet) GetCurrentTotalDiscountsSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalDiscountsSet
	}
	return nil
}

func (x *CurrentTotalSet) GetCurrentTotalDutiesSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalDutiesSet
	}
	return nil
}

func (x *CurrentTotalSet) GetCurrentTotalPriceSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalPriceSet
	}
	return nil
}

func (x *CurrentTotalSet) GetCurrentSubtotalPriceSet() *TotalSet {
	if x != nil {
		return x.CurrentSubtotalPriceSet
	}
	return nil
}

func (x *CurrentTotalSet) GetCurrentTotalTaxSet() *TotalSet {
	if x != nil {
		return x.CurrentTotalTaxSet
	}
	return nil
}

func (x *CurrentTotalSet) GetOriginalTotalDutiesSet() *TotalSet {
	if x != nil {
		return x.OriginalTotalDutiesSet
	}
	return nil
}

type TotalSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopMoney        *Money `protobuf:"bytes,2,opt,name=shop_money,json=shopMoney,proto3" json:"shop_money,omitempty"`
	PresentmentMoney *Money `protobuf:"bytes,3,opt,name=presentment_money,json=presentmentMoney,proto3" json:"presentment_money,omitempty"`
}

func (x *TotalSet) Reset() {
	*x = TotalSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalSet) ProtoMessage() {}

func (x *TotalSet) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalSet.ProtoReflect.Descriptor instead.
func (*TotalSet) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{16}
}

func (x *TotalSet) GetShopMoney() *Money {
	if x != nil {
		return x.ShopMoney
	}
	return nil
}

func (x *TotalSet) GetPresentmentMoney() *Money {
	if x != nil {
		return x.PresentmentMoney
	}
	return nil
}

type Money struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode string `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
}

func (x *Money) Reset() {
	*x = Money{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{17}
}

func (x *Money) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Money) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type ClientDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientDetails) Reset() {
	*x = ClientDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientDetails) ProtoMessage() {}

func (x *ClientDetails) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientDetails.ProtoReflect.Descriptor instead.
func (*ClientDetails) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{18}
}

type CustomerAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address1    string `protobuf:"bytes,2,opt,name=address1,proto3" json:"address1,omitempty"`
	Address2    string `protobuf:"bytes,3,opt,name=address2,proto3" json:"address2,omitempty"`
	City        string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Company     string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Country     string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode string `protobuf:"bytes,7,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	FirstName   string `protobuf:"bytes,8,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,9,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// "latitude": null,
	// "longitude": null,
	Name         string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Phone        string `protobuf:"bytes,13,opt,name=phone,proto3" json:"phone,omitempty"`
	Province     string `protobuf:"bytes,14,opt,name=province,proto3" json:"province,omitempty"`
	ProvinceCode string `protobuf:"bytes,15,opt,name=province_code,json=provinceCode,proto3" json:"province_code,omitempty"`
	Zip          string `protobuf:"bytes,16,opt,name=zip,proto3" json:"zip,omitempty"`
	Id           int64  `protobuf:"varint,17,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId   int64  `protobuf:"varint,18,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CountryName  string `protobuf:"bytes,19,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	Default      bool   `protobuf:"varint,20,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *CustomerAddress) Reset() {
	*x = CustomerAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAddress) ProtoMessage() {}

func (x *CustomerAddress) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAddress.ProtoReflect.Descriptor instead.
func (*CustomerAddress) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{19}
}

func (x *CustomerAddress) GetAddress1() string {
	if x != nil {
		return x.Address1
	}
	return ""
}

func (x *CustomerAddress) GetAddress2() string {
	if x != nil {
		return x.Address2
	}
	return ""
}

func (x *CustomerAddress) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CustomerAddress) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CustomerAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CustomerAddress) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CustomerAddress) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CustomerAddress) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CustomerAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomerAddress) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CustomerAddress) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CustomerAddress) GetProvinceCode() string {
	if x != nil {
		return x.ProvinceCode
	}
	return ""
}

func (x *CustomerAddress) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *CustomerAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerAddress) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CustomerAddress) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *CustomerAddress) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{20}
}

type LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	AdminGraphqlApiId   string `protobuf:"bytes,3,opt,name=admin_graphql_api_id,json=adminGraphqlApiId,proto3" json:"admin_graphql_api_id,omitempty"`
	FulfillableQuantity int64  `protobuf:"varint,4,opt,name=fulfillable_quantity,json=fulfillableQuantity,proto3" json:"fulfillable_quantity,omitempty"`
	FulfillmentService  string `protobuf:"bytes,5,opt,name=fulfillment_service,json=fulfillmentService,proto3" json:"fulfillment_service,omitempty"`
	// "fulfillment_status": null,
	GiftCard      bool      `protobuf:"varint,7,opt,name=gift_card,json=giftCard,proto3" json:"gift_card,omitempty"`
	Grams         int64     `protobuf:"varint,8,opt,name=grams,proto3" json:"grams,omitempty"`
	Name          string    `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Price         string    `protobuf:"bytes,10,opt,name=price,proto3" json:"price,omitempty"`
	PriceSet      *TotalSet `protobuf:"bytes,11,opt,name=price_set,json=priceSet,proto3" json:"price_set,omitempty"`
	ProductExists bool      `protobuf:"varint,12,opt,name=product_exists,json=productExists,proto3" json:"product_exists,omitempty"`
	ProductId     int64     `protobuf:"varint,13,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// "properties": [],
	Quantity                   int64     `protobuf:"varint,15,opt,name=quantity,proto3" json:"quantity,omitempty"`
	RequiresShipping           bool      `protobuf:"varint,16,opt,name=requires_shipping,json=requiresShipping,proto3" json:"requires_shipping,omitempty"`
	Sku                        string    `protobuf:"bytes,17,opt,name=sku,proto3" json:"sku,omitempty"`
	Taxable                    bool      `protobuf:"varint,18,opt,name=taxable,proto3" json:"taxable,omitempty"`
	Title                      string    `protobuf:"bytes,19,opt,name=title,proto3" json:"title,omitempty"`
	TotalDiscount              string    `protobuf:"bytes,20,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`
	TotalDiscountSet           *TotalSet `protobuf:"bytes,21,opt,name=total_discount_set,json=totalDiscountSet,proto3" json:"total_discount_set,omitempty"`
	VariantId                  int64     `protobuf:"varint,22,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	VariantInventoryManagement string    `protobuf:"bytes,23,opt,name=variant_inventory_management,json=variantInventoryManagement,proto3" json:"variant_inventory_management,omitempty"`
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shopify_matter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_shopify_matter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_shopify_matter_proto_rawDescGZIP(), []int{21}
}

func (x *LineItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LineItem) GetAdminGraphqlApiId() string {
	if x != nil {
		return x.AdminGraphqlApiId
	}
	return ""
}

func (x *LineItem) GetFulfillableQuantity() int64 {
	if x != nil {
		return x.FulfillableQuantity
	}
	return 0
}

func (x *LineItem) GetFulfillmentService() string {
	if x != nil {
		return x.FulfillmentService
	}
	return ""
}

func (x *LineItem) GetGiftCard() bool {
	if x != nil {
		return x.GiftCard
	}
	return false
}

func (x *LineItem) GetGrams() int64 {
	if x != nil {
		return x.Grams
	}
	return 0
}

func (x *LineItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LineItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *LineItem) GetPriceSet() *TotalSet {
	if x != nil {
		return x.PriceSet
	}
	return nil
}

func (x *LineItem) GetProductExists() bool {
	if x != nil {
		return x.ProductExists
	}
	return false
}

func (x *LineItem) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *LineItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *LineItem) GetRequiresShipping() bool {
	if x != nil {
		return x.RequiresShipping
	}
	return false
}

func (x *LineItem) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *LineItem) GetTaxable() bool {
	if x != nil {
		return x.Taxable
	}
	return false
}

func (x *LineItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LineItem) GetTotalDiscount() string {
	if x != nil {
		return x.TotalDiscount
	}
	return ""
}

func (x *LineItem) GetTotalDiscountSet() *TotalSet {
	if x != nil {
		return x.TotalDiscountSet
	}
	return nil
}

func (x *LineItem) GetVariantId() int64 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *LineItem) GetVariantInventoryManagement() string {
	if x != nil {
		return x.VariantInventoryManagement
	}
	return ""
}

var File_shopify_matter_proto protoreflect.FileDescriptor

var file_shopify_matter_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2f, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x22,
	0x09, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x22, 0x07, 0x0a, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xe2, 0x15, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41,
	0x70, 0x69, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x1a,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x1b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70,
	0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x18, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66,
	0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x44, 0x0a, 0x15,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61,
	0x78, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x12,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x53,
	0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x61, 0x78, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x78, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x26, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x4c,
	0x0a, 0x19, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x64, 0x75, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x52, 0x16, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x2c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x69, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x52, 0x10, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61,
	0x78, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x74, 0x61, 0x78, 0x65, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x3d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x1a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x75, 0x74,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x43, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x12, 0x4a, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79,
	0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x45, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61, 0x78, 0x12, 0x35, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61,
	0x78, 0x53, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x70, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x47, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x69, 0x70, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x49, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x41, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x18, 0x4b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x4e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66,
	0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x43, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x52, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12,
	0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x22, 0x09, 0x0a, 0x07, 0x54, 0x61, 0x78,
	0x4c, 0x69, 0x6e, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x0c, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x43, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x08, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x35, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x0d, 0x0a, 0x0b, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2d,
	0x0a, 0x15, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xba, 0x04,
	0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x56,
	0x0a, 0x17, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52,
	0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xdd, 0x03, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x50, 0x0a, 0x1b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68,
	0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x18,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x12, 0x4a, 0x0a, 0x18, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x74, 0x69, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f,
	0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x15, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x74, 0x69, 0x65,
	0x73, 0x53, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x4e,
	0x0a, 0x1a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x75,
	0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x44,
	0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x74, 0x61, 0x78, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x61,
	0x78, 0x53, 0x65, 0x74, 0x12, 0x4c, 0x0a, 0x19, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x74, 0x69, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66,
	0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x16, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x74, 0x69, 0x65, 0x73, 0x53,
	0x65, 0x74, 0x22, 0x76, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x2d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x6f, 0x70, 0x69,
	0x66, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x44, 0x0a, 0x05, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xdb, 0x03, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22,
	0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x22, 0xd6, 0x05, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x41, 0x70, 0x69, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x67, 0x69, 0x66, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74, 0x61, 0x78,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x3f, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x68, 0x6f, 0x70, 0x69, 0x66, 0x79, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x74,
	0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x40, 0x0a, 0x1c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x62, 0x6e, 0x75, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x73, 0x68,
	0x6f, 0x70, 0x69, 0x66, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shopify_matter_proto_rawDescOnce sync.Once
	file_shopify_matter_proto_rawDescData = file_shopify_matter_proto_rawDesc
)

func file_shopify_matter_proto_rawDescGZIP() []byte {
	file_shopify_matter_proto_rawDescOnce.Do(func() {
		file_shopify_matter_proto_rawDescData = protoimpl.X.CompressGZIP(file_shopify_matter_proto_rawDescData)
	})
	return file_shopify_matter_proto_rawDescData
}

var file_shopify_matter_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_shopify_matter_proto_goTypes = []interface{}{
	(*Shopify)(nil),               // 0: shopify.Shopify
	(*Order)(nil),                 // 1: shopify.Order
	(*OrderCreate)(nil),           // 2: shopify.OrderCreate
	(*Url)(nil),                   // 3: shopify.Url
	(*PaymentTerms)(nil),          // 4: shopify.PaymentTerms
	(*TaxLine)(nil),               // 5: shopify.TaxLine
	(*ShippingLine)(nil),          // 6: shopify.ShippingLine
	(*Refund)(nil),                // 7: shopify.Refund
	(*PaymentTerm)(nil),           // 8: shopify.PaymentTerm
	(*Attribute)(nil),             // 9: shopify.Attribute
	(*Fulfillment)(nil),           // 10: shopify.Fulfillment
	(*EmailMarketingConsent)(nil), // 11: shopify.EmailMarketingConsent
	(*Customer)(nil),              // 12: shopify.Customer
	(*DiscountApplications)(nil),  // 13: shopify.DiscountApplications
	(*DiscountCode)(nil),          // 14: shopify.DiscountCode
	(*CurrentTotalSet)(nil),       // 15: shopify.CurrentTotalSet
	(*TotalSet)(nil),              // 16: shopify.TotalSet
	(*Money)(nil),                 // 17: shopify.Money
	(*ClientDetails)(nil),         // 18: shopify.ClientDetails
	(*CustomerAddress)(nil),       // 19: shopify.CustomerAddress
	(*Company)(nil),               // 20: shopify.Company
	(*LineItem)(nil),              // 21: shopify.LineItem
}
var file_shopify_matter_proto_depIdxs = []int32{
	16, // 0: shopify.OrderCreate.current_subtotal_price_set:type_name -> shopify.TotalSet
	16, // 1: shopify.OrderCreate.current_total_discounts_set:type_name -> shopify.TotalSet
	16, // 2: shopify.OrderCreate.current_total_price_set:type_name -> shopify.TotalSet
	16, // 3: shopify.OrderCreate.current_total_tax_set:type_name -> shopify.TotalSet
	16, // 4: shopify.OrderCreate.original_total_duties_set:type_name -> shopify.TotalSet
	16, // 5: shopify.OrderCreate.subtotal_price_set:type_name -> shopify.TotalSet
	16, // 6: shopify.OrderCreate.total_discounts_set:type_name -> shopify.TotalSet
	16, // 7: shopify.OrderCreate.total_line_items_price_set:type_name -> shopify.TotalSet
	16, // 8: shopify.OrderCreate.total_price_set:type_name -> shopify.TotalSet
	16, // 9: shopify.OrderCreate.total_shipping_price_set:type_name -> shopify.TotalSet
	16, // 10: shopify.OrderCreate.total_tax_set:type_name -> shopify.TotalSet
	19, // 11: shopify.OrderCreate.billing_address:type_name -> shopify.CustomerAddress
	12, // 12: shopify.OrderCreate.customer:type_name -> shopify.Customer
	21, // 13: shopify.OrderCreate.line_items:type_name -> shopify.LineItem
	19, // 14: shopify.OrderCreate.shipping_address:type_name -> shopify.CustomerAddress
	6,  // 15: shopify.OrderCreate.shipping_lines:type_name -> shopify.ShippingLine
	16, // 16: shopify.ShippingLine.discounted_price_set:type_name -> shopify.TotalSet
	16, // 17: shopify.ShippingLine.price_set:type_name -> shopify.TotalSet
	19, // 18: shopify.Customer.default_address:type_name -> shopify.CustomerAddress
	11, // 19: shopify.Customer.email_marketing_consent:type_name -> shopify.EmailMarketingConsent
	16, // 20: shopify.CurrentTotalSet.current_total_discounts_set:type_name -> shopify.TotalSet
	16, // 21: shopify.CurrentTotalSet.current_total_duties_set:type_name -> shopify.TotalSet
	16, // 22: shopify.CurrentTotalSet.current_total_price_set:type_name -> shopify.TotalSet
	16, // 23: shopify.CurrentTotalSet.current_subtotal_price_set:type_name -> shopify.TotalSet
	16, // 24: shopify.CurrentTotalSet.current_total_tax_set:type_name -> shopify.TotalSet
	16, // 25: shopify.CurrentTotalSet.original_total_duties_set:type_name -> shopify.TotalSet
	17, // 26: shopify.TotalSet.shop_money:type_name -> shopify.Money
	17, // 27: shopify.TotalSet.presentment_money:type_name -> shopify.Money
	16, // 28: shopify.LineItem.price_set:type_name -> shopify.TotalSet
	16, // 29: shopify.LineItem.total_discount_set:type_name -> shopify.TotalSet
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_shopify_matter_proto_init() }
func file_shopify_matter_proto_init() {
	if File_shopify_matter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shopify_matter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shopify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Url); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShippingLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fulfillment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailMarketingConsent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountApplications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentTotalSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Money); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shopify_matter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shopify_matter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shopify_matter_proto_goTypes,
		DependencyIndexes: file_shopify_matter_proto_depIdxs,
		MessageInfos:      file_shopify_matter_proto_msgTypes,
	}.Build()
	File_shopify_matter_proto = out.File
	file_shopify_matter_proto_rawDesc = nil
	file_shopify_matter_proto_goTypes = nil
	file_shopify_matter_proto_depIdxs = nil
}
