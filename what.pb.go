// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: what.proto

package trade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_what_proto protoreflect.FileDescriptor

var file_what_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x77, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x1a, 0x0c, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x32, 0x2b, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x0a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x1a, 0x0e,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x32, 0xe5,
	0x03, 0x0a, 0x06, 0x54, 0x65, 0x78, 0x74, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x0a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x1a, 0x0e, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a,
	0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x63, 0x74, 0x12,
	0x0e, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x0f, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4b, 0x65, 0x79,
	0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a,
	0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4e,
	0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x32, 0x3e, 0x0a, 0x08, 0x53, 0x69, 0x64, 0x65, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0c, 0x54, 0x6f, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x1a, 0x10, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x32, 0xa3, 0x05, 0x0a, 0x08, 0x4d, 0x61, 0x73, 0x73, 0x6d,
	0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x0a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e,
	0x4b, 0x65, 0x79, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x3d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x12, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x13, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x30, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x0a, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12,
	0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x1a, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x41, 0x0a, 0x17, 0x52, 0x65, 0x61,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x4b, 0x65, 0x79,
	0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37,
	0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0a, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x1a, 0x0e, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e,
	0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x53, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x18, 0x5a, 0x16,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x62, 0x6e, 0x75, 0x6d,
	0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_what_proto_goTypes = []interface{}{
	(*Msg)(nil),                  // 0: trade.Msg
	(*Message)(nil),              // 1: trade.Message
	(*ListRequest)(nil),          // 2: trade.ListRequest
	(*Key)(nil),                  // 3: trade.Key
	(*TextTemplate)(nil),         // 4: trade.TextTemplate
	(*ImageFile)(nil),            // 5: trade.ImageFile
	(*TextCampaign)(nil),         // 6: trade.TextCampaign
	(*TextCampaignSegment)(nil),  // 7: trade.TextCampaignSegment
	(*Nothing)(nil),              // 8: trade.Nothing
	(*MessageSenders)(nil),       // 9: trade.MessageSenders
	(*Messages)(nil),             // 10: trade.Messages
	(*TextTemplates)(nil),        // 11: trade.TextTemplates
	(*TextCampaigns)(nil),        // 12: trade.TextCampaigns
	(*TextCampaignSegments)(nil), // 13: trade.TextCampaignSegments
}
var file_what_proto_depIdxs = []int32{
	0,  // 0: trade.Hello.Ping:input_type -> trade.Msg
	0,  // 1: trade.Textme.Ping:input_type -> trade.Msg
	1,  // 2: trade.Textme.Send:input_type -> trade.Message
	2,  // 3: trade.Textme.ListMessageSenders:input_type -> trade.ListRequest
	1,  // 4: trade.Textme.React:input_type -> trade.Message
	3,  // 5: trade.Textme.ReadTextTemplate:input_type -> trade.Key
	2,  // 6: trade.Textme.ListTextTemplates:input_type -> trade.ListRequest
	4,  // 7: trade.Textme.CreateTextTemplate:input_type -> trade.TextTemplate
	3,  // 8: trade.Textme.DeleteTextTemplate:input_type -> trade.Key
	4,  // 9: trade.Textme.UpdateTextTemplate:input_type -> trade.TextTemplate
	5,  // 10: trade.Sidefile.ToThumbnails:input_type -> trade.ImageFile
	3,  // 11: trade.Massmess.ReadTextCampaign:input_type -> trade.Key
	2,  // 12: trade.Massmess.ListTextCampaigns:input_type -> trade.ListRequest
	6,  // 13: trade.Massmess.CreateTextCampaign:input_type -> trade.TextCampaign
	3,  // 14: trade.Massmess.DeleteTextCampaign:input_type -> trade.Key
	6,  // 15: trade.Massmess.UpdateTextCampaign:input_type -> trade.TextCampaign
	3,  // 16: trade.Massmess.ReadTextCampaignSegment:input_type -> trade.Key
	2,  // 17: trade.Massmess.ListTextCampaignSegments:input_type -> trade.ListRequest
	7,  // 18: trade.Massmess.CreateTextCampaignSegment:input_type -> trade.TextCampaignSegment
	3,  // 19: trade.Massmess.DeleteTextCampaignSegment:input_type -> trade.Key
	7,  // 20: trade.Massmess.UpdateTextCampaignSegment:input_type -> trade.TextCampaignSegment
	8,  // 21: trade.Hello.Ping:output_type -> trade.Nothing
	8,  // 22: trade.Textme.Ping:output_type -> trade.Nothing
	1,  // 23: trade.Textme.Send:output_type -> trade.Message
	9,  // 24: trade.Textme.ListMessageSenders:output_type -> trade.MessageSenders
	10, // 25: trade.Textme.React:output_type -> trade.Messages
	4,  // 26: trade.Textme.ReadTextTemplate:output_type -> trade.TextTemplate
	11, // 27: trade.Textme.ListTextTemplates:output_type -> trade.TextTemplates
	4,  // 28: trade.Textme.CreateTextTemplate:output_type -> trade.TextTemplate
	8,  // 29: trade.Textme.DeleteTextTemplate:output_type -> trade.Nothing
	4,  // 30: trade.Textme.UpdateTextTemplate:output_type -> trade.TextTemplate
	5,  // 31: trade.Sidefile.ToThumbnails:output_type -> trade.ImageFile
	6,  // 32: trade.Massmess.ReadTextCampaign:output_type -> trade.TextCampaign
	12, // 33: trade.Massmess.ListTextCampaigns:output_type -> trade.TextCampaigns
	6,  // 34: trade.Massmess.CreateTextCampaign:output_type -> trade.TextCampaign
	8,  // 35: trade.Massmess.DeleteTextCampaign:output_type -> trade.Nothing
	6,  // 36: trade.Massmess.UpdateTextCampaign:output_type -> trade.TextCampaign
	7,  // 37: trade.Massmess.ReadTextCampaignSegment:output_type -> trade.TextCampaignSegment
	13, // 38: trade.Massmess.ListTextCampaignSegments:output_type -> trade.TextCampaignSegments
	7,  // 39: trade.Massmess.CreateTextCampaignSegment:output_type -> trade.TextCampaignSegment
	8,  // 40: trade.Massmess.DeleteTextCampaignSegment:output_type -> trade.Nothing
	7,  // 41: trade.Massmess.UpdateTextCampaignSegment:output_type -> trade.TextCampaignSegment
	21, // [21:42] is the sub-list for method output_type
	0,  // [0:21] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_what_proto_init() }
func file_what_proto_init() {
	if File_what_proto != nil {
		return
	}
	file_matter_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_what_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_what_proto_goTypes,
		DependencyIndexes: file_what_proto_depIdxs,
	}.Build()
	File_what_proto = out.File
	file_what_proto_rawDesc = nil
	file_what_proto_goTypes = nil
	file_what_proto_depIdxs = nil
}
